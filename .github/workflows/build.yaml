name: Build

on: [ push, pull_request ]

defaults:
  run:
    shell: nix develop -v -c bash {0}

jobs:
  build:
    name: Build
    runs-on: [ self-hosted, nix, amd64-linux, medium ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set environment variables
        run: |
          XDG_CACHE_HOME=${XDG_CACHE_HOME:-"$HOME/.cache"}
          echo "PROTOC_CACHE=${XDG_CACHE_HOME}/protoc_cache" >> "${GITHUB_ENV}"
          echo "COURSIER_CACHE=${XDG_CACHE_HOME}/coursier" >> "${GITHUB_ENV}"
          echo "SBT_OPTS=-Dsbt.global.base=${XDG_CACHE_HOME}/sbt -Dsbt.ivy.home=${XDG_CACHE_HOME}/ivy -Xmx4g -Xss6m -XX:-UseContainerSupport" >> "${GITHUB_ENV}"
          echo "FDB_CLUSTER_FILE=$PWD/.fdb/cluster.file" >> "${GITHUB_ENV}"
          

      - name: Check code quality
        run: |
          sbt --client 'set ThisBuild / scalacOptions ++= Seq("-Werror")'
          sbt --client cq

      - name: Compile
        run: sbt --client compile

      - name: Compile tests
        run: sbt --client 'Test / compile'

      #      - name: Debug
      #        run: |
      #          trap : TERM INT; sleep infinity & wait

      - name: Test
        run: |
          FDBSERVER_PID=$(./cli.sh start_ephemeral_fdb_server) || exit $?
          trap "kill -15 $FDBSERVER_PID" EXIT
          sbt --client test

      - name: Publish
        if: github.ref == 'refs/heads/master'
        env:
          PGP_SIGNING_KEY: ${{ secrets.PGP_SIGNING_KEY }}
          PGP_SIGNING_KEY_FP: ${{ secrets.PGP_SIGNING_KEY_FP }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          printenv PGP_SIGNING_KEY | base64 -d | gpg --import
          ./release.sh publish
