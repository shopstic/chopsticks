name: Build

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  build-env:
    name: Build CI environment
    runs-on: ubuntu-20.04
    outputs:
      image: ${{ steps.buildkit.outputs.image }}:${{ steps.buildkit.outputs.tag }}
    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - run: chmod +r ~/.docker/config.json

      - name: Build and push shell Docker image
        id: buildkit
        uses: shopstic/buildkit-action@1.0.12
        with:
          context: ${{ github.workspace }}/shell
          image: ghcr.io/shopstic/chopsticks-ci
          tag: ${{ hashFiles('shell/*') }}
          skipIfExists: true

  build-apps:
    name: Build libraries
    needs: build-env
    runs-on: ubuntu-20.04
    services:
      fdb:
        image: foundationdb/foundationdb:6.2.30
        env:
          FDB_NETWORKING_MODE: host
        ports:
          - 4500:4500

    steps:
      - uses: actions/checkout@v2

      - name: Cache coursier
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
            ~/.sbt
          key: coursier-${{ hashFiles('build.sbt') }}
          restore-keys: |
            coursier-

      - name: Cache sbt targets
        uses: actions/cache@v2
        with:
          path: |
            ./target
            ./**/target
          key: target-1.5.1-${{ github.sha }}
          restore-keys: |
            target-1.5.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: chmod +r ~/.docker/config.json

      - name: Build
        env:
          SHELL_IMAGE: ${{ needs.build-env.outputs.image }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          echo "Restored cache stats ---------------------------------------------"
          du -sh ~/.cache || true
          find . -type d -name target | xargs -I{} du -sh {}
          echo "------------------------------------------------------------------"

          mkdir -p ~/.sbt ~/.cache

          # ./cli.sh ci_run_in_shell
