syntax = "proto3";

import "scalapb/scalapb.proto";
package dev.chopsticks.kvdb.proto;

message KvdbKeyConstraintList {
  repeated KvdbKeyConstraint constraints = 1 [(scalapb.field).collection_type = "List"];
}

message KvdbKeyConstraint {
  enum Operator {
    EQUAL = 0;
    GREATER = 1;
    LESS = 2;
    GREATER_EQUAL = 3;
    LESS_EQUAL = 4;
    PREFIX = 5;
    FIRST = 6;
    LAST = 7;
  }

  Operator operator = 1;
  bytes operand = 2;
  string operand_display = 3;
}

message KvdbKeyRange {
  repeated KvdbKeyConstraint from = 1 [(scalapb.field).collection_type = "List"];
  repeated KvdbKeyConstraint to = 2 [(scalapb.field).collection_type = "List"];
  int32 limit = 3;
}

/*message KvdbTransactionWrite {
  oneof sealed_value {
    KvdbTransactionPut put = 1;
    KvdbTransactionDelete delete = 2;
    KvdbTransactionDeleteRange delete_range = 3;
  }
}

message KvdbTransactionPut {
  string column_id = 1;
  bytes key = 2;
  bytes value = 3;
}

message KvdbTransactionDelete {
  string column_id = 1;
  bytes key = 2;
}

message KvdbTransactionDeleteRange {
  string column_id = 1;
  bytes from_key = 2;
  bytes toKey_key = 3;
}*/

//message KvdbPutRequest {
//  string column_id = 1;
//  bytes key = 2;
//  bytes value = 3;
//}
//
//message KvdbPutResult {
//}
//
//message KvdbDeleteRequest {
//  string column_id = 1;
//  bytes key = 2;
//  bool single = 3;
//}
//
//message KvdbDeleteRangeRequest {
//  string column_id = 1;
//  bytes from_key = 2;
//  bytes to_key = 3;
//}
//
//message KvdbDeleteResult {
//}
//
//message KvdbDeletePrefixRequest {
//  string column_id = 1;
//  bytes prefix = 2;
//}
//
//message KvdbDeletePrefixResult {
//  uint64 count = 1;
//}
//
//message KvdbTransactionAction {
//  oneof action {
//    KvdbPutRequest put = 1;
//    KvdbDeleteRequest delete = 2;
//    KvdbDeletePrefixRequest delete_prefix = 3;
//    KvdbDeleteRangeRequest delete_range = 4;
//  }
//}

message KvdbOperationException {
  enum ExceptionType {
    SEEK_FAILURE = 0;
    UNOPTIMIZED_OPERATION = 2;
    INVALID_COLUMN_FAMILY = 3;
    INVALID_ARGUMENT = 4;
    UNSUPPORTED_OPERATION = 5;
    ALREADY_CLOSED = 6;
    CONDITIONAL_TRANSACTION_FAILED = 7;
  }
  ExceptionType exception_type = 1;
  string message = 2;
}
